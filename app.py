import streamlit as st
import os
import io
from openai import OpenAI
from dotenv import load_dotenv
from pydub import AudioSegment
import base64

# CARREGAR VARI√ÅVEIS DE AMBIENTE
load_dotenv()
openai_api_key = os.getenv("OPENAI_API_KEY")

# CONFIGURA√á√ÉO DA P√ÅGINA
st.set_page_config(page_title="Projeto Davar", layout="centered")

# SIDEBAR COM ORIENTA√á√ïES
with st.sidebar:
    st.header("üí¨ Sobre o Davar")
    st.markdown("""
    O **Davar** √© um espa√ßo de escuta com presen√ßa.

    Aqui, voc√™ pode escrever ou gravar sua pergunta, desabafo ou reflex√£o.

    **Como usar:**
    - Envie um √°udio em `.mp3`, `.wav` ou `.m4a`, ou escreva sua mensagem.
    - O Davar responde com empatia e sensibilidade.

    üîí Nenhuma conversa √© salva. Tudo √© apagado ao sair.

    ---
    üí° *Projeto sem fins lucrativos, feito com prop√≥sito e cuidado.*

    üì© **Contato:** [contato@projetodavar.com](mailto:contato@projetodavar.com)
    """)

# IMAGEM NO TOPO
st.image("Davar_imagem_top_de_tela_04_06_2025.png", use_column_width=True)

# INTERFACE PRINCIPAL
st.title("üëÇ Davar ‚Äî Escuta com Presen√ßa")
st.markdown("Envie um √°udio ou escreva abaixo.")

# CLIENTE OPENAI
client = OpenAI(api_key=openai_api_key)

# PROCESSAMENTO DE √ÅUDIO
texto_transcrito = ""
arquivo_audio = st.file_uploader("Envie seu √°udio", type=["mp3", "wav", "m4a"])

if arquivo_audio is not None:
    st.audio(arquivo_audio)
    with st.spinner("Transcrevendo √°udio..."):
        try:
            bytes_audio = arquivo_audio.read()
            audio_file = io.BytesIO(bytes_audio)
            transcript = client.audio.transcriptions.create(
                model="whisper-1",
                file=audio_file,
                response_format="text"
            )
            texto_transcrito = transcript
            st.success("Transcri√ß√£o conclu√≠da:")
            st.markdown(f"**Voc√™ disse:** {texto_transcrito}")
        except Exception as e:
            st.error(f"Erro na transcri√ß√£o: {e}")

# ENTRADA DE TEXTO MANUAL
texto_manual = st.text_area("Ou escreva aqui sua pergunta ou reflex√£o:")

# ESCOLHA DE TEXTO FINAL
texto_final = texto_transcrito if texto_transcrito else texto_manual

if texto_final:
    if st.button("Enviar para o Davar"):
        with st.spinner("Gerando resposta..."):
            try:
                resposta = client.chat.completions.create(
                    model="gpt-4o",
                    messages=[
                        {"role": "system", "content": "Voc√™ √© o Davar, um espa√ßo de escuta com presen√ßa. Responda com empatia, sem julgamento e com profundidade."},
                        {"role": "user", "content": texto_final}
                    ]
                )
                resposta_gerada = resposta.choices[0].message.content
                st.markdown("---")
                st.subheader("Resposta do Davar")
                st.markdown(resposta_gerada)
            except Exception as e:
                st.error(f"Erro ao gerar resposta: {e}")

# RODAP√â
st.markdown("""
---
<center>
üìå Nenhuma informa√ß√£o √© armazenada. <br> 
üïäÔ∏è Este √© um projeto de escuta ativa e gratuita. <br>
üå± Feito com alma, tecnologia e prop√≥sito.
</center>
""", unsafe_allow_html=True)

