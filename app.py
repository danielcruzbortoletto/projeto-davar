import streamlit as st
import soundfile as sf
import tempfile
import os
from openai import OpenAI
from dotenv import load_dotenv

# CONFIGURA√á√ÉO DA P√ÅGINA
st.set_page_config(page_title="Projeto Davar", layout="centered")

# CARREGAR VARI√ÅVEIS DE AMBIENTE
load_dotenv()
client = OpenAI()

# SIDEBAR COM ORIENTA√á√ïES
with st.sidebar:
    st.header("üí¨ Sobre o Davar")
    st.markdown("""
    O **Davar** √© um espa√ßo de escuta com presen√ßa.

    Aqui, voc√™ pode escrever ou gravar livremente ‚Äî sem julgamentos, sem pressa.

    **Como usar:**
    - Grave ou escreva sua pergunta, desabafo ou reflex√£o.
    - O Davar responde com empatia e sensibilidade.
    - Nenhuma conversa √© salva. Tudo √© apagado ao sair.

    ---
    üí° *Projeto sem fins lucrativos, feito com prop√≥sito e cuidado.*

    üì© **Contato:** [contato@projetodavar.com](mailto:contato@projetodavar.com)
    """)

st.image("Davar_imagem_top_de_tela_04_06_2025.png")

st.markdown("""<style>footer {visibility: visible;} footer:after {content:'üíú Davar √© um projeto de escuta com prop√≥sito e presen√ßa. Nenhum dado √© salvo.'; display: block; text-align: center; padding: 10px;} </style>""", unsafe_allow_html=True)

st.title("üß† Projeto Davar")
st.markdown("Envie uma reflex√£o ou pergunta. Pode ser por texto ou por √°udio.")

# INPUT DE TEXTO
text_input = st.text_area("Digite aqui (opcional):")

# INPUT DE √ÅUDIO
uploaded_file = st.file_uploader("Ou envie um √°udio em .wav", type=["wav"])

user_input = text_input.strip()

if uploaded_file is not None:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as tmpfile:
        tmpfile.write(uploaded_file.read())
        tmpfile_path = tmpfile.name

    # TRANSCRI√á√ÉO COM WHISPER
    with st.spinner("Transcrevendo √°udio..."):
        try:
            transcript = client.audio.transcriptions.create(
                model="whisper-1",
                file=open(tmpfile_path, "rb")
            )
            user_input = transcript.text
            st.success("Transcri√ß√£o conclu√≠da:")
            st.write(user_input)
        except Exception as e:
            st.error("Erro ao transcrever o √°udio.")
            st.stop()

if user_input:
    with st.spinner("Gerando resposta do Davar..."):
        try:
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=[
                    {"role": "system", "content": "Voc√™ √© o Davar, um espa√ßo de escuta com presen√ßa. Responda com empatia, leveza e profundidade, mesmo a perguntas dif√≠ceis."},
                    {"role": "user", "content": user_input}
                ]
            )
            output = response.choices[0].message.content
            st.markdown("### üßæ Resposta do Davar:")
            st.write(output)
        except Exception as e:
            st.error("Erro ao gerar resposta:")
            st.error(str(e))
else:
    st.info("Envie uma pergunta, reflex√£o ou desabafo.")


