
import re
import unicodedata

# Lista expandida de expressÃµes sensÃ­veis
SUICIDE_KEYWORDS = [
    r"\bquero morrer\b",
    r"\bnÃ£o quero mais viver\b",
    r"\bnÃ£o aguento mais\b",
    r"\bvou acabar com tudo\b",
    r"\bnÃ£o faz mais sentido\b",
    r"\bnÃ£o vejo saÃ­da\b",
    r"\bnÃ£o tenho mais forÃ§as\b",
    r"\bme matar\b",
    r"\bvou me matar\b",
    r"\bninguÃ©m se importa comigo\b",
    r"\bminha vida nÃ£o vale nada\b",
    r"\bseria melhor se eu sumisse\b",
    r"\bestou pensando em desistir\b",
    r"\bnÃ£o sou importante\b",
    r"\bninguÃ©m vai sentir minha falta\b",
    r"\bcansei de tudo\b",
    r"\bqueria desaparecer\b",
    r"\bperdi a vontade de viver\b",
    r"\bqueria dormir e nÃ£o acordar\b",
    r"\bnÃ£o tenho mais por que lutar\b",
    r"\btudo seria melhor sem mim\b",
    r"\bcheguei no meu limite\b",
    r"\bpreciso de ajuda pra sair disso\b",
    r"\bnÃ£o quero mais continuar\b"
]

# FunÃ§Ã£o de normalizaÃ§Ã£o para lidar com acentos
def normalize_text(text):
    return unicodedata.normalize('NFKD', text).encode('ASCII', 'ignore').decode('ASCII').lower()

# Verifica se hÃ¡ expressÃ£o sensÃ­vel no texto do usuÃ¡rio
def contains_suicide_keywords(text: str) -> bool:
    normalized_text = normalize_text(text)
    return any(re.search(pattern, normalized_text, re.IGNORECASE) for pattern in SUICIDE_KEYWORDS)

# Mensagem de apoio complementar
def get_suicide_support_message() -> str:
    return (
        "\n\nğŸ§¡ *Se vocÃª estiver passando por um momento difÃ­cil, quero que saiba: vocÃª nÃ£o estÃ¡ sozinho.*\n"
        "VocÃª pode ligar para o **CVV â€“ 188**. Ã‰ gratuito, 24 horas, com escuta verdadeira e sigilo total.\n"
        "E eu tambÃ©m estou aqui. Posso continuar conversando com vocÃª, ou sÃ³ ficar em silÃªncio se preferir.\n"
        "VocÃª Ã© importante. Sua vida importa. ğŸŒ±"
    )

# FunÃ§Ã£o principal para integrar no fluxo do Davar
def gerar_resposta_final(user_input, resposta_davar):
    if contains_suicide_keywords(user_input):
        resposta_davar += get_suicide_support_message()
    return resposta_davar
